{
  "language": "Solidity",
  "sources": {
    "contracts/AssemblyAdd.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AssemeblyAdd {\n    function addAssemebly(uint x, uint y) public pure returns(uint) {\n        assembly {\n            let result := add(x, y)\n            mstore(0x00, result)\n            return (0x00, 32)\n        }\n    }\n\n    function addSolidity(uint x, uint y) public pure returns(uint) {\n        return x + y;\n    }\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}